from deap import tools

from constants import NPOP


# def rank_selection(pop):
#     ranked_list = sorted(pop, key=lambda i: i[0], reverse=True)
#     best_individual = ranked_list[-1]
#     extracted_best = ranked_list[:-1]
#     print(extracted_best)


# rank_selection([[82.20345, [6.454345937492587, 10.034157708822725, 6.859570538756065, 3.834792121889387, 6.347686167432631, 6.605141602373866, 3.395743079249614, 5.354139619925853, 32.44214022444632, 22.33280189865792, 4.52973612230098, 6.7233090336645445, 1.2621511756425665, 0.07192095532851389, 0.08369086141984908, 0.005285721054101872, 0.12118247878682095, 0.001950276156324264, 0.10991024411332019, 0.26087555798894235, 0.1144524918846552, 0.5522596342477135, 0.007853779405719838, 2.725783023076529, 1.0727100531469653, 0.04819612753031851, 1.07762439403926, 3.9154702467681277, 0.5624720513391546]], [65.43627, [12.289222853791898, 11.67926741300714, 3.269762526310391, 3.1451363226325064, 3.034887661736478, 8.311107772901261, 4.638132084747473, 3.100799457555526, 32.97006385650336, 17.117281021687578, 3.2843960878514387, 2.638709648472697, 1.872779715950783, 0.05935156209837136, 0.08549634479131304,


def ranking_selection(pop):
    k = len(pop)-2
    best_ind = tools.selBest(pop, 1)
    k_worst_individuals = tools.selWorst(pop, k)
    offspring = tools.selRoulette(k_worst_individuals, NPOP-1)

    return best_ind + offspring
